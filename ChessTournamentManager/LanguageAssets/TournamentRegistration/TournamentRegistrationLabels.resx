<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="backToTournamentsPage" xml:space="preserve">
    <value>Back to tournaments page</value>
  </data>
  <data name="registerTeamButton" xml:space="preserve">
    <value>Register team</value>
  </data>
  <data name="registerTeamCannotGetManagedTeams" xml:space="preserve">
    <value>Cannot get managed teams</value>
  </data>
  <data name="registerTeamError" xml:space="preserve">
    <value>Cannot register team, please try it later</value>
  </data>
  <data name="registerTeamNoManagedTeams" xml:space="preserve">
    <value>You don't have any teams to register</value>
  </data>
  <data name="registrationNotCompletedProfile" xml:space="preserve">
    <value>You can register to tournament only after completion of your profile, this button will forward you on page, where you can complete it</value>
  </data>
  <data name="registrationTeamWasRegistered" xml:space="preserve">
    <value>Team was registered</value>
  </data>
  <data name="registrationTitle" xml:space="preserve">
    <value>Tournament registration</value>
  </data>
  <data name="singleCanRegister" xml:space="preserve">
    <value>You can register for this tournament</value>
  </data>
  <data name="singleRegisterAccountInfo" xml:space="preserve">
    <value>Personal account will be registered</value>
  </data>
  <data name="singleRegisterButton" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="singleRegisterError" xml:space="preserve">
    <value>Cannot register this account, please try it later</value>
  </data>
  <data name="singleRegisterSuccess" xml:space="preserve">
    <value>You were successfully registered for this tournament</value>
  </data>
  <data name="singleUnregisterCanUnregister" xml:space="preserve">
    <value>You can unregister from this tournament. After clicking the button, you will be unregistered</value>
  </data>
  <data name="singleUnregisterWarningHasStarted" xml:space="preserve">
    <value>You cannot unregister from this tournanament, tournament has already started</value>
  </data>
  <data name="singleUnregisterWarningNotRegistered" xml:space="preserve">
    <value>You cannot unregister from this tournament, you are not registered</value>
  </data>
  <data name="singleUnregisterWarningRegistrationEnded" xml:space="preserve">
    <value>You cannot unregister from this tournament, registration has already ended. Please contact manager of tournament</value>
  </data>
  <data name="singleWarningHasStarted" xml:space="preserve">
    <value>You cannot register for this tournanament, tournament has started</value>
  </data>
  <data name="singleWarningIsRegistered" xml:space="preserve">
    <value>You cannot register for this tournament, you are already registered</value>
  </data>
  <data name="singleWarningMaximumPlayers" xml:space="preserve">
    <value>You cannot register for this tournament, there is already maximum number of players</value>
  </data>
  <data name="singleWarningRegistrationClosed" xml:space="preserve">
    <value>You cannot register for this tournament, registration has already ended</value>
  </data>
  <data name="singleWarningRegistrationNotOpened" xml:space="preserve">
    <value>You cannot register for this tournament, registration is open yet, you can do it from</value>
  </data>
  <data name="teamCanRegister" xml:space="preserve">
    <value>Team can be registered for this tournament</value>
  </data>
  <data name="teamUnregisterCanUnregister" xml:space="preserve">
    <value>You can unregister from this tournament. After clicking the button, team will be unregistered</value>
  </data>
  <data name="teamUnregisterWarningHasStarted" xml:space="preserve">
    <value>You cannot unregister this team from this tournanament, tournament has already started</value>
  </data>
  <data name="teamUnregisterWarningNotRegistered" xml:space="preserve">
    <value>You cannot unregister team from this tournament, it is not registered</value>
  </data>
  <data name="teamUnregisterWarningRegistrationEnded" xml:space="preserve">
    <value>You cannot unregister this team from this tournament, registration has already ended. Please contact manager of tournament</value>
  </data>
  <data name="teamWarningAboutMaximumNumberOfPlayersPart1" xml:space="preserve">
    <value>You can register teams which have</value>
  </data>
  <data name="teamWarningAboutMaximumNumberOfPlayersPart2" xml:space="preserve">
    <value>players. Teams with different number of players are not visible.</value>
  </data>
  <data name="teamWarningAlreadyRegistered" xml:space="preserve">
    <value>You cannot register this team for this tournament, it is already registered</value>
  </data>
  <data name="teamWarningHasStarted" xml:space="preserve">
    <value>You cannot register this team for this tournanament, tournament has started</value>
  </data>
  <data name="teamWarningMaximumTeams" xml:space="preserve">
    <value>You cannot register this team for this tournament, there is already maximum number of teams</value>
  </data>
  <data name="teamWarningPlayerInTeamIsInTournament" xml:space="preserve">
    <value>Player which is in selected team is already in another team in tournament</value>
  </data>
  <data name="teamWarningRegistrationClosed" xml:space="preserve">
    <value>You cannot register this team for this tournament, registration has already ended</value>
  </data>
  <data name="teamWarningRegistrationNotOpened" xml:space="preserve">
    <value>You cannot register this team for this tournament, registration is open yet, you can do it from</value>
  </data>
  <data name="teamWarningWrongSizePart1" xml:space="preserve">
    <value>You cannot register this team to tournament, only teams with</value>
  </data>
  <data name="teamWarningWrongSizePart2" xml:space="preserve">
    <value>player/s are allowed. This team has</value>
  </data>
  <data name="teamWarningWrongSizePart3" xml:space="preserve">
    <value>player/s</value>
  </data>
  <data name="unregisterSingleBackToTournaments" xml:space="preserve">
    <value>Back to my tournaments</value>
  </data>
  <data name="unregisterSingleCancelRegistration" xml:space="preserve">
    <value>Cancel registration</value>
  </data>
  <data name="unregisterSingleConfirmation" xml:space="preserve">
    <value>You were successfuly unregistered from tournament</value>
  </data>
  <data name="unregisterSingleNotForTeams" xml:space="preserve">
    <value>You cannot unregister from this tournament, only manager of the team can do it, please contact him. If you are the manager, you can unregister team from team management page</value>
  </data>
  <data name="unregisterSingleTitle" xml:space="preserve">
    <value>Cancel registration</value>
  </data>
  <data name="unregistrationTeamBack" xml:space="preserve">
    <value>Back to team management page</value>
  </data>
  <data name="unregistrationTeamButton" xml:space="preserve">
    <value>Cancel registration</value>
  </data>
  <data name="unregistrationTeamConfirmation" xml:space="preserve">
    <value>Team was unregistered from tournament</value>
  </data>
  <data name="unregistrationTitleTeam" xml:space="preserve">
    <value>Unregistration</value>
  </data>
</root>