//------------------------------------------------------------------------------
// <auto-generated>
//     Tento kód byl generován nástrojem.
//     Verze modulu runtime:4.0.30319.42000
//
//     Změny tohoto souboru mohou způsobit nesprávné chování a budou ztraceny,
//     dojde-li k novému generování kódu.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChessTournamentManager.Shared.AnnotationErrors {
    using System;
    
    
    /// <summary>
    ///   Třída prostředků se silnými typy pro vyhledávání lokalizovaných řetězců atp.
    /// </summary>
    // Tato třída byla automaticky generována třídou StronglyTypedResourceBuilder
    // pomocí nástroje podobného aplikaci ResGen nebo Visual Studio.
    // Chcete-li přidat nebo odebrat člena, upravte souboru .ResX a pak znovu spusťte aplikaci ResGen
    // s parametrem /str nebo znovu sestavte projekt aplikace Visual Studio.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AnnotationErrors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AnnotationErrors() {
        }
        
        /// <summary>
        ///   Vrací instanci ResourceManager uloženou v mezipaměti použitou touto třídou.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ChessTournamentManager.Shared.AnnotationErrors.AnnotationErrors", typeof(AnnotationErrors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Potlačí vlastnost CurrentUICulture aktuálního vlákna pro všechna
        ///   vyhledání prostředků pomocí třídy prostředků se silnými typy.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný City name length has to be between {2} and {1}.
        /// </summary>
        public static string addressCity {
            get {
                return ResourceManager.GetString("addressCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný House number length has to be between {2} and {1}.
        /// </summary>
        public static string addressHouseNumber {
            get {
                return ResourceManager.GetString("addressHouseNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Street name length has to be between {2} and {1}.
        /// </summary>
        public static string addressStreet {
            get {
                return ResourceManager.GetString("addressStreet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Zip name length has to be between {2} and {1}.
        /// </summary>
        public static string addressZip {
            get {
                return ResourceManager.GetString("addressZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný ChessClub name length must be between {2} and {1}.
        /// </summary>
        public static string chessClubLength {
            get {
                return ResourceManager.GetString("chessClubLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný FIDE ID length must be between {2} and {1}.
        /// </summary>
        public static string FideIdLength {
            get {
                return ResourceManager.GetString("FideIdLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Elo must be larger than {1}.
        /// </summary>
        public static string playerElo {
            get {
                return ResourceManager.GetString("playerElo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný End of registration period must be set.
        /// </summary>
        public static string registrationEnd {
            get {
                return ResourceManager.GetString("registrationEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Maximum number of participants has to be between {1} and {2}.
        /// </summary>
        public static string registrationSettings {
            get {
                return ResourceManager.GetString("registrationSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Start of registration period must be set.
        /// </summary>
        public static string registrationStart {
            get {
                return ResourceManager.GetString("registrationStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Size of teams has to between {1} and {2}.
        /// </summary>
        public static string teamDrawSize {
            get {
                return ResourceManager.GetString("teamDrawSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Team name length must be between {2} and {1}.
        /// </summary>
        public static string teamName {
            get {
                return ResourceManager.GetString("teamName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Team name is required.
        /// </summary>
        public static string teamNameRequired {
            get {
                return ResourceManager.GetString("teamNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Properties &quot;From move&quot; have to be in increasing order and cannot contains duplicite values.
        /// </summary>
        public static string timeControlNotValid {
            get {
                return ResourceManager.GetString("timeControlNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Minutes have to be between {1} and {2}.
        /// </summary>
        public static string timeControlSettingMinutes {
            get {
                return ResourceManager.GetString("timeControlSettingMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Hours have to be between {1} and {2}.
        /// </summary>
        public static string timeControlSettingsHours {
            get {
                return ResourceManager.GetString("timeControlSettingsHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Increment has to be between {1} and {2}.
        /// </summary>
        public static string timeControlSettingsIncrement {
            get {
                return ResourceManager.GetString("timeControlSettingsIncrement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Seconds have to be between {1} and {2}.
        /// </summary>
        public static string timeControlSettingsSeconds {
            get {
                return ResourceManager.GetString("timeControlSettingsSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný From move has to be between {1} and {2}.
        /// </summary>
        public static string timeControlSettingsToMove {
            get {
                return ResourceManager.GetString("timeControlSettingsToMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Tournament must have short description.
        /// </summary>
        public static string tournamentDescription {
            get {
                return ResourceManager.GetString("tournamentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Short description length must be between {2} and {1}.
        /// </summary>
        public static string tournamentDescriptionLength {
            get {
                return ResourceManager.GetString("tournamentDescriptionLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Tournament must have a name.
        /// </summary>
        public static string tournamentName {
            get {
                return ResourceManager.GetString("tournamentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vyhledá lokalizovaný řetězec podobný Tournament name length must be between {2} and {1}.
        /// </summary>
        public static string tournamentNameLength {
            get {
                return ResourceManager.GetString("tournamentNameLength", resourceCulture);
            }
        }
    }
}
